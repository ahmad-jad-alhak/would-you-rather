{"version":3,"file":"Calendar.Button.Example.js","sourceRoot":"../src/","sources":["components/Calendar/examples/Calendar.Button.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["// @codepen\r\nimport * as React from 'react';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Callout, DirectionalHint } from 'office-ui-fabric-react/lib/Callout';\r\nimport { Calendar, DayOfWeek } from 'office-ui-fabric-react/lib/Calendar';\r\nimport { FocusTrapZone } from 'office-ui-fabric-react/lib/FocusTrapZone';\r\n\r\nconst DayPickerStrings = {\r\n  months: [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n  ],\r\n\r\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n\r\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n\r\n  shortDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\r\n\r\n  goToToday: 'Go to today'\r\n};\r\n\r\nexport interface ICalendarButtonExampleState {\r\n  showCalendar: boolean;\r\n  selectedDate: Date | null;\r\n}\r\n\r\nexport interface ICalendarButtonExampleProps {\r\n  isDayPickerVisible?: boolean;\r\n  isMonthPickerVisible?: boolean;\r\n  highlightCurrentMonth?: boolean;\r\n  highlightSelectedMonth?: boolean;\r\n  buttonString?: string;\r\n  showMonthPickerAsOverlay?: boolean;\r\n}\r\n\r\nexport class CalendarButtonExample extends React.Component<ICalendarButtonExampleProps, ICalendarButtonExampleState> {\r\n  public static defaultProps: ICalendarButtonExampleProps = {\r\n    showMonthPickerAsOverlay: false,\r\n    isDayPickerVisible: true,\r\n    isMonthPickerVisible: true,\r\n    buttonString: 'Click for Calendar'\r\n  };\r\n\r\n  private _calendarButtonElement: HTMLElement;\r\n\r\n  public constructor(props: ICalendarButtonExampleProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showCalendar: false,\r\n      selectedDate: null\r\n    };\r\n\r\n    this._onClick = this._onClick.bind(this);\r\n    this._onDismiss = this._onDismiss.bind(this);\r\n    this._onSelectDate = this._onSelectDate.bind(this);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div>\r\n        <div ref={calendarBtn => (this._calendarButtonElement = calendarBtn!)}>\r\n          <DefaultButton\r\n            onClick={this._onClick}\r\n            text={!this.state.selectedDate ? this.props.buttonString : this.state.selectedDate.toLocaleDateString()}\r\n          />\r\n        </div>\r\n        {this.state.showCalendar && (\r\n          <Callout\r\n            isBeakVisible={false}\r\n            className=\"ms-DatePicker-callout\"\r\n            gapSpace={0}\r\n            doNotLayer={false}\r\n            target={this._calendarButtonElement}\r\n            directionalHint={DirectionalHint.bottomLeftEdge}\r\n            onDismiss={this._onDismiss}\r\n            setInitialFocus={true}\r\n          >\r\n            <FocusTrapZone isClickableOutsideFocusTrap={true}>\r\n              <Calendar\r\n                onSelectDate={this._onSelectDate}\r\n                onDismiss={this._onDismiss}\r\n                isMonthPickerVisible={this.props.isMonthPickerVisible}\r\n                value={this.state.selectedDate!}\r\n                firstDayOfWeek={DayOfWeek.Sunday}\r\n                strings={DayPickerStrings}\r\n                isDayPickerVisible={this.props.isDayPickerVisible}\r\n                highlightCurrentMonth={this.props.highlightCurrentMonth}\r\n                highlightSelectedMonth={this.props.highlightSelectedMonth}\r\n                showMonthPickerAsOverlay={this.props.showMonthPickerAsOverlay}\r\n              />\r\n            </FocusTrapZone>\r\n          </Callout>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onClick(event: any): void {\r\n    this.setState((prevState: ICalendarButtonExampleState) => {\r\n      prevState.showCalendar = !prevState.showCalendar;\r\n      return prevState;\r\n    });\r\n  }\r\n\r\n  private _onDismiss(): void {\r\n    this.setState((prevState: ICalendarButtonExampleState) => {\r\n      prevState.showCalendar = false;\r\n      return prevState;\r\n    });\r\n  }\r\n\r\n  private _onSelectDate(date: Date): void {\r\n    this.setState((prevState: ICalendarButtonExampleState) => {\r\n      prevState.showCalendar = false;\r\n      prevState.selectedDate = date;\r\n      return prevState;\r\n    });\r\n  }\r\n}\r\n"]}