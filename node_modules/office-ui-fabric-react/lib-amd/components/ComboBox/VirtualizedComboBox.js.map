{"version":3,"file":"VirtualizedComboBox.js","sourceRoot":"../src/","sources":["components/ComboBox/VirtualizedComboBox.tsx"],"names":[],"mappings":";;;IAOA;QAAyC,+CAAiC;QAA1E;YAAA,qEAkDC;YAjDC,4BAA4B;YACpB,eAAS,GAAG,qBAAS,EAAa,CAAC;YAC3C,mCAAmC;YAC3B,WAAK,GAAG,qBAAS,EAAS,CAAC;YA4BzB,mBAAa,GAAG,UAAC,KAAqB;gBACtC,IAAA,iCAAY,CAAW;gBAE/B,0BAA0B;gBAC1B,OAAO,CACL,oBAAC,WAAI,IACH,YAAY,EAAE,KAAI,CAAC,KAAK,EACxB,IAAI,EAAC,SAAS,EACd,KAAK,EAAE,KAAK,CAAC,OAAO,EACpB,YAAY,EAAE,YAAY,CAAC,CAAC,CAAC,UAAC,IAAuB,IAAK,OAAA,YAAY,CAAC,IAAI,CAAC,EAAlB,CAAkB,CAAC,CAAC,CAAC,cAAM,OAAA,IAAI,EAAJ,CAAI,GACzF,CACH,CAAC;YACJ,CAAC,CAAC;YAEQ,qBAAe,GAAG,UAAC,SAAiB;gBAC5C,sDAAsD;gBACtD,KAAI,CAAC,KAAK,CAAC,OAAO,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YACpE,CAAC,CAAC;;QACJ,CAAC;QA5CQ,yCAAW,GAAlB;YACE,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;gBAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;aAC7C;QACH,CAAC;QAEM,mCAAK,GAAZ;YACE,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;gBAC1B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;gBAC/B,OAAO,IAAI,CAAC;aACb;YAED,OAAO,KAAK,CAAC;QACf,CAAC;QAEM,oCAAM,GAAb;YACE,OAAO,CACL,oBAAC,mBAAQ,uBACH,IAAI,CAAC,KAAK,IACd,YAAY,EAAE,IAAI,CAAC,SAAS,EAC5B,YAAY,EAAE,IAAI,CAAC,aAAa,EAChC,cAAc,EAAE,IAAI,CAAC,eAAe,IACpC,CACH,CAAC;QACJ,CAAC;QAoBH,0BAAC;IAAD,CAAC,AAlDD,CAAyC,yBAAa,GAkDrD;IAlDY,kDAAmB","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, createRef } from '../../Utilities';\r\nimport { ComboBox } from './ComboBox';\r\nimport { IComboBoxProps, IComboBox } from './ComboBox.types';\r\nimport { IList, List } from '../../List';\r\nimport { ISelectableOption } from '../../utilities/selectableOption/SelectableOption.types';\r\n\r\nexport class VirtualizedComboBox extends BaseComponent<IComboBoxProps, {}> implements IComboBox {\r\n  /** The combo box element */\r\n  private _comboBox = createRef<IComboBox>();\r\n  /** The virtualized list element */\r\n  private _list = createRef<IList>();\r\n\r\n  public dismissMenu(): void {\r\n    if (this._comboBox.current) {\r\n      return this._comboBox.current.dismissMenu();\r\n    }\r\n  }\r\n\r\n  public focus() {\r\n    if (this._comboBox.current) {\r\n      this._comboBox.current.focus();\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <ComboBox\r\n        {...this.props}\r\n        componentRef={this._comboBox}\r\n        onRenderList={this._onRenderList}\r\n        onScrollToItem={this._onScrollToItem}\r\n      />\r\n    );\r\n  }\r\n\r\n  protected _onRenderList = (props: IComboBoxProps): JSX.Element => {\r\n    const { onRenderItem } = props;\r\n\r\n    // Render virtualized list\r\n    return (\r\n      <List\r\n        componentRef={this._list}\r\n        role=\"listbox\"\r\n        items={props.options}\r\n        onRenderCell={onRenderItem ? (item: ISelectableOption) => onRenderItem(item) : () => null}\r\n      />\r\n    );\r\n  };\r\n\r\n  protected _onScrollToItem = (itemIndex: number): void => {\r\n    // We are using the List component, call scrollToIndex\r\n    this._list.current && this._list.current.scrollToIndex(itemIndex);\r\n  };\r\n}\r\n"]}