{"version":3,"file":"FocusTrapZone.js","sourceRoot":"../src/","sources":["components/FocusTrapZone/FocusTrapZone.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  KeyCodes,\r\n  elementContains,\r\n  getNativeProps,\r\n  divProperties,\r\n  getFirstTabbable,\r\n  getLastTabbable,\r\n  getNextElement,\r\n  focusAsync,\r\n  createRef\r\n} from '../../Utilities';\r\nimport { IFocusTrapZone, IFocusTrapZoneProps } from './FocusTrapZone.types';\r\n\r\nexport class FocusTrapZone extends BaseComponent<IFocusTrapZoneProps, {}> implements IFocusTrapZone {\r\n  private static _focusStack: FocusTrapZone[] = [];\r\n\r\n  private _root = createRef<HTMLDivElement>();\r\n  private _previouslyFocusedElementOutsideTrapZone: HTMLElement;\r\n  private _previouslyFocusedElementInTrapZone?: HTMLElement;\r\n\r\n  public componentWillMount(): void {\r\n    FocusTrapZone._focusStack.push(this);\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    const {\r\n      isClickableOutsideFocusTrap = false,\r\n      forceFocusInsideTrap = true,\r\n      elementToFocusOnDismiss,\r\n      disableFirstFocus = false\r\n    } = this.props;\r\n\r\n    this._previouslyFocusedElementOutsideTrapZone = elementToFocusOnDismiss\r\n      ? elementToFocusOnDismiss\r\n      : (document.activeElement as HTMLElement);\r\n    if (!elementContains(this._root.current, this._previouslyFocusedElementOutsideTrapZone) && !disableFirstFocus) {\r\n      this.focus();\r\n    }\r\n\r\n    if (forceFocusInsideTrap) {\r\n      this._events.on(window, 'focus', this._forceFocusInTrap, true);\r\n    }\r\n\r\n    if (!isClickableOutsideFocusTrap) {\r\n      this._events.on(window, 'click', this._forceClickInTrap, true);\r\n    }\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: IFocusTrapZoneProps): void {\r\n    const { elementToFocusOnDismiss } = nextProps;\r\n    if (elementToFocusOnDismiss && this._previouslyFocusedElementOutsideTrapZone !== elementToFocusOnDismiss) {\r\n      this._previouslyFocusedElementOutsideTrapZone = elementToFocusOnDismiss;\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    const { ignoreExternalFocusing } = this.props;\r\n\r\n    this._events.dispose();\r\n    FocusTrapZone._focusStack = FocusTrapZone._focusStack.filter((value: FocusTrapZone) => {\r\n      return this !== value;\r\n    });\r\n\r\n    const activeElement = document.activeElement as HTMLElement;\r\n    if (\r\n      !ignoreExternalFocusing &&\r\n      this._previouslyFocusedElementOutsideTrapZone &&\r\n      typeof this._previouslyFocusedElementOutsideTrapZone.focus === 'function' &&\r\n      (elementContains(this._root.value, activeElement) || activeElement === document.body)\r\n    ) {\r\n      focusAsync(this._previouslyFocusedElementOutsideTrapZone);\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { className, ariaLabelledBy } = this.props;\r\n    const divProps = getNativeProps(this.props, divProperties);\r\n\r\n    return (\r\n      <div\r\n        {...divProps}\r\n        className={className}\r\n        ref={this._root}\r\n        aria-labelledby={ariaLabelledBy}\r\n        onKeyDown={this._onKeyboardHandler}\r\n        onFocusCapture={this._onFocusCapture}\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public focus() {\r\n    const { focusPreviouslyFocusedInnerElement, firstFocusableSelector } = this.props;\r\n\r\n    if (\r\n      focusPreviouslyFocusedInnerElement &&\r\n      this._previouslyFocusedElementInTrapZone &&\r\n      elementContains(this._root.value, this._previouslyFocusedElementInTrapZone)\r\n    ) {\r\n      // focus on the last item that had focus in the zone before we left the zone\r\n      focusAsync(this._previouslyFocusedElementInTrapZone);\r\n      return;\r\n    }\r\n\r\n    const focusSelector =\r\n      typeof firstFocusableSelector === 'string'\r\n        ? firstFocusableSelector\r\n        : firstFocusableSelector && firstFocusableSelector();\r\n\r\n    let _firstFocusableChild;\r\n\r\n    if (this._root.current) {\r\n      if (focusSelector) {\r\n        _firstFocusableChild = this._root.current.querySelector('.' + focusSelector);\r\n      } else {\r\n        _firstFocusableChild = getNextElement(\r\n          this._root.current,\r\n          this._root.current.firstChild as HTMLElement,\r\n          true,\r\n          false,\r\n          false,\r\n          true\r\n        );\r\n      }\r\n    }\r\n    if (_firstFocusableChild) {\r\n      focusAsync(_firstFocusableChild);\r\n    }\r\n  }\r\n\r\n  private _onFocusCapture = (ev: React.FocusEvent<HTMLDivElement>) => {\r\n    if (this.props.onFocusCapture) {\r\n      this.props.onFocusCapture(ev);\r\n    }\r\n    if (ev.target !== ev.currentTarget) {\r\n      // every time focus changes within the trap zone, remember the focused element so that\r\n      // it can be restored if focus leaves the pane and returns via keystroke (i.e. via a call to this.focus(true))\r\n      this._previouslyFocusedElementInTrapZone = ev.target as HTMLElement;\r\n    }\r\n  };\r\n\r\n  private _onKeyboardHandler = (ev: React.KeyboardEvent<HTMLDivElement>): void => {\r\n    if (this.props.onKeyDown) {\r\n      this.props.onKeyDown(ev);\r\n    }\r\n\r\n    // If the default has been prevented, do not process keyboard events.\r\n    if (ev.isDefaultPrevented()) {\r\n      return;\r\n    }\r\n\r\n    if (ev.which !== KeyCodes.tab) {\r\n      return;\r\n    }\r\n\r\n    if (!this._root.current) {\r\n      return;\r\n    }\r\n\r\n    const _firstTabbableChild = getFirstTabbable(\r\n      this._root.current,\r\n      this._root.current.firstChild as HTMLElement,\r\n      true\r\n    );\r\n    const _lastTabbableChild = getLastTabbable(this._root.current, this._root.current.lastChild as HTMLElement, true);\r\n\r\n    if (ev.shiftKey && _firstTabbableChild === ev.target) {\r\n      focusAsync(_lastTabbableChild);\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n    } else if (!ev.shiftKey && _lastTabbableChild === ev.target) {\r\n      focusAsync(_firstTabbableChild);\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n    }\r\n  };\r\n\r\n  private _forceFocusInTrap(ev: FocusEvent): void {\r\n    if (FocusTrapZone._focusStack.length && this === FocusTrapZone._focusStack[FocusTrapZone._focusStack.length - 1]) {\r\n      const focusedElement = document.activeElement as HTMLElement;\r\n\r\n      if (!elementContains(this._root.current, focusedElement)) {\r\n        this.focus();\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _forceClickInTrap(ev: MouseEvent): void {\r\n    if (FocusTrapZone._focusStack.length && this === FocusTrapZone._focusStack[FocusTrapZone._focusStack.length - 1]) {\r\n      const clickedElement = ev.target as HTMLElement;\r\n\r\n      if (clickedElement && !elementContains(this._root.current, clickedElement)) {\r\n        this.focus();\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}