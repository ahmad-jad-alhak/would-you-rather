{"version":3,"file":"CommandBar.base.js","sourceRoot":"../src/","sources":["components/CommandBar/CommandBar.base.tsx"],"names":[],"mappings":";;;IAiBA,IAAM,aAAa,GAAG,8BAAkB,EAA4C,CAAC;IAyBrF;QAAoC,0CAAmC;QAAvE;YAAA,qEAyPC;YAlPS,kBAAY,GAAG,qBAAS,EAAgB,CAAC;YACzC,kBAAY,GAAG,qBAAS,EAAgB,CAAC;YAoEzC,mBAAa,GAAG,UAAC,IAAqB;gBAC5C,OAAO,CACL,oBAAC,qBAAS,IACR,SAAS,EAAE,eAAG,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EACrC,SAAS,EAAE,8BAAkB,CAAC,UAAU,EACxC,IAAI,EAAE,SAAS,gBACH,KAAI,CAAC,KAAK,CAAC,SAAS;oBAGhC,oBAAC,yBAAW,IACV,YAAY,EAAE,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAC9C,SAAS,EAAE,eAAG,CAAC,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAC3C,2BAA2B,EAAE,IAAI,EACjC,IAAI,EAAE,cAAc,EACpB,KAAK,EAAE,IAAI,CAAC,YAAY,EACxB,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,EACzE,YAAY,EAAE,KAAI,CAAC,aAAa,EAChC,sBAAsB,EAAE,KAAI,CAAC,uBAAuB,GACpD;oBAGD,IAAI,CAAC,QAAQ,IAAI,CAChB,oBAAC,yBAAW,IACV,SAAS,EAAE,eAAG,CAAC,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAC7C,2BAA2B,EAAE,IAAI,EACjC,IAAI,EAAE,cAAc,EACpB,KAAK,EAAE,IAAI,CAAC,QAAQ,EACpB,YAAY,EAAE,KAAI,CAAC,aAAa,EAChC,sBAAsB,EAAE,sBAAU,GAClC,CACH,CACS,CACb,CAAC;YACJ,CAAC,CAAC;YAEM,mBAAa,GAAG,UAAC,IAA0B;gBACzC,IAAA,yBAA8C,EAA9C,kEAA8C,CAAgB;gBAEtE,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC;gBAExC,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,kFAAkF;oBAClF,2FAA2F;oBAC3F,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,cAAM,OAAA,SAAS,EAAT,CAAS,CAAC,CAAC;iBAC7C;gBACD,IAAM,kBAAkB,sBACtB,kBAAkB,EAAE,IAAI,IACrB,IAAI,IACP,MAAM,qBAAI,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IAAK,IAAI,CAAC,YAAY,GACxD,SAAS,EAAE,eAAG,CAAC,wBAAwB,EAAE,IAAI,CAAC,SAAS,CAAC,EACxD,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,EAC3C,SAAS,EAAE,IAAI,CAAC,YAAY,EAC5B,OAAO,EAAE,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GACnC,CAAC;gBAEF,IAAI,IAAI,CAAC,QAAQ,IAAI,QAAQ,KAAK,SAAS,EAAE;oBAC3C,OAAO,CACL,oBAAC,qBAAW,qBAAC,OAAO,EAAE,QAAQ,IAAM,IAAI,CAAC,gBAAgB;wBACvD,oBAAC,iBAAiB,uBAAK,kBAAkC,EAAI,CACjD,CACf,CAAC;iBACH;gBAED,OAAO,oBAAC,iBAAiB,uBAAK,kBAAkC,EAAI,CAAC;YACvE,CAAC,CAAC;YAcM,6BAAuB,GAAG,UAAC,aAAqC;gBAChE,IAAA,gBAGQ,EAFZ,wBAAuD,EAAvD,mEAAuD,EACvD,2BAAwB,CAAC,iCAAiC;kBAA1D,6CAAwB,CAAC,iCAAiC;gBAAlC,CACX;gBAEf,IAAM,qBAAqB,GACtB,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC,mBAAmB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,QAC1E,aAAa,CACjB,CAAC;gBAEF,IAAM,aAAa,wBACd,mBAAmB,IACtB,MAAM,qBAAI,QAAQ,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAK,mBAAmB,CAAC,MAAM,GACvE,SAAS,EAAE,eAAG,CAAC,8BAA8B,EAAE,mBAAmB,CAAC,SAAS,CAAC,EAC7E,SAAS,uBAAO,mBAAmB,CAAC,SAAS,IAAE,KAAK,EAAE,qBAAqB,KAC3E,aAAa,qBAAI,QAAQ,EAAE,MAAM,IAAK,mBAAmB,CAAC,aAAa,IACxE,CAAC;gBAEF,OAAO,CACL,oBAAC,kBAAkB,sCACF,KAAI,CAAC,QAAQ,kBACd,KAAI,CAAC,QAAQ,IACvB,aAA6B,EACjC,CACH,CAAC;YACJ,CAAC,CAAC;YAgBM,mBAAa,GAAG,UAAC,IAAqB;gBACtC,IAAA,gBAA6C,EAA3C,gCAAa,EAAE,gCAAa,CAAgB;gBAC9C,IAAA,gCAAY,EAAE,kCAAa,EAAE,wBAAQ,CAAU;gBAErD,2DAA2D;gBAC3D,IAAM,SAAS,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAE5E,IAAI,SAAS,KAAK,SAAS,EAAE;oBAC3B,SAAS,CAAC,kBAAkB,GAAG,IAAI,CAAC;oBAEpC,aAAa,IAAI,SAAS,SAAK,aAAa,CAAC,CAAC;oBAC9C,YAAY,GAAG,aAAa,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBAEjF,IAAM,OAAO,GAAG,KAAI,CAAC,gBAAgB,sBAAM,IAAI,IAAE,YAAY,cAAA,EAAE,aAAa,eAAA,IAAG,CAAC;oBAEhF,QAAQ,GAAG,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;oBAE1C,IAAI,aAAa,EAAE;wBACjB,aAAa,CAAC,SAAS,CAAC,CAAC;qBAC1B;oBAED,4BAAY,OAAO,IAAE,QAAQ,UAAA,IAAG;iBACjC;gBAED,OAAO,SAAS,CAAC;YACnB,CAAC,CAAC;YAEM,iBAAW,GAAG,UAAC,IAAqB;gBACpC,IAAA,gBAA2C,EAAzC,gCAAa,EAAE,4BAAW,CAAgB;gBAC1C,IAAA,gDAAoB,CAAU;gBAChC,IAAA,gCAAY,EAAE,kCAAa,EAAE,wBAAQ,CAAU;gBACrD,IAAM,SAAS,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;gBAEnC,iFAAiF;gBACjF,IAAI,SAAS,KAAK,SAAS,IAAI,aAAa,CAAC,MAAM,GAAG,oBAAoB,EAAE;oBAC1E,SAAS,CAAC,kBAAkB,GAAG,KAAK,CAAC;oBAErC,aAAa,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACvC,2DAA2D;oBAC3D,YAAY,GAAG,aAAa,CAAC,CAAC,EAAE,SAAS,SAAK,YAAY,EAAE,CAAC,CAAK,YAAY,SAAE,SAAS,EAAC,CAAC;oBAE3F,IAAM,OAAO,GAAG,KAAI,CAAC,gBAAgB,sBAAM,IAAI,IAAE,YAAY,cAAA,EAAE,aAAa,eAAA,IAAG,CAAC;oBAChF,QAAQ,GAAG,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;oBAE1C,IAAI,WAAW,EAAE;wBACf,WAAW,CAAC,SAAS,CAAC,CAAC;qBACxB;oBAED,4BAAY,OAAO,IAAE,QAAQ,UAAA,IAAG;iBACjC;gBAED,OAAO,SAAS,CAAC;YACnB,CAAC,CAAC;;QACJ,CAAC;QA9OQ,+BAAM,GAAb;YACQ,IAAA,eASQ,EARZ,wBAAS,EACT,gBAAK,EACL,gCAAa,EACb,sBAAQ,EACR,kBAAM,EACN,gBAAK,EACL,oBAAiC,EAAjC,sDAAiC,EACjC,kBAA6B,EAA7B,kDAA6B,CAChB;YAEf,IAAM,cAAc,GAAoB;gBACtC,YAAY,EAAM,KAAK,QAAC;gBACxB,aAAa,EAAM,aAAc,QAAC;gBAClC,oBAAoB,EAAM,aAAc,SAAE,MAAM;gBAChD,QAAQ,UAAA;gBACR,QAAQ,EAAE,EAAE;aACb,CAAC;YAEF,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;YACtC,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,MAAO,EAAE,EAAE,KAAK,EAAE,KAAM,EAAE,SAAS,WAAA,EAAE,CAAC,CAAC;YAExE,OAAO,CACL,oBAAC,yBAAW,IACV,YAAY,EAAE,IAAI,CAAC,YAAY,EAC/B,SAAS,EAAE,SAAS,EACpB,IAAI,EAAE,cAAc,EACpB,YAAY,EAAE,YAAY,EAC1B,UAAU,EAAE,UAAU,EACtB,YAAY,EAAE,IAAI,CAAC,aAAa,GAChC,CACH,CAAC;QACJ,CAAC;QAEM,8BAAK,GAAZ;YACU,IAAA,uCAAoB,CAAuB;YAEnD,WAAW,IAAI,WAAW,CAAC,KAAK,EAAE,CAAC;QACrC,CAAC;QAEM,kCAAS,GAAhB;YACE,IAAI,CAAC,YAAY,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;QACrE,CAAC;QAEO,yCAAgB,GAAxB,UAAyB,IAAqB;YAA9C,iBAkBC;YAjBC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEnF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,CAAC,EAAE,KAAK;gBACvD,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC9B,IAAI,CAAC,cAAc,CAAC,GAAG,KAAI,CAAC,QAAQ,CAAC;gBACrC,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CAAC;YAEH,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,CAAC,EAAE,KAAK;oBAC/C,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBAC9B,IAAI,CAAC,cAAc,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;oBACpC,OAAO,IAAI,CAAC;gBACd,CAAC,CAAC,CAAC;aACJ;YAED,OAAO,IAAI,CAAC;QACd,CAAC;QAoEO,uCAAc,GAAtB,UAAuB,IAA0B;YAC/C,OAAO,UAAA,EAAE;gBACP,8CAA8C;gBAC9C,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,OAAO;iBACR;gBACD,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;iBACxB;YACH,CAAC,CAAC;QACJ,CAAC;QA8BO,yCAAgB,GAAxB,UAAyB,IAAqB;YACpC,IAAA,gCAAY,EAAE,kBAAa,EAAb,kCAAa,EAAE,kCAAa,CAAU;YAC5D,IAAM,SAAS,GAAG,UAAC,GAAW,EAAE,OAA6B;gBACnD,IAAA,qBAAsB,EAAtB,2CAAsB,CAAa;gBAC3C,OAAO,GAAG,GAAG,QAAQ,CAAC;YACxB,CAAC,CAAC;YAEF,IAAM,UAAU,GAAG,YAAY,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;YACtD,IAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;YAC9C,IAAM,WAAW,GAAG,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;YAE7D,OAAO,CAAC,UAAU,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACrD,CAAC;QAjMa,2BAAY,GAAqB;YAC7C,KAAK,EAAE,EAAE;YACT,aAAa,EAAE,EAAE;SAClB,CAAC;QAqPJ,qBAAC;KAAA,AAzPD,CAAoC,yBAAa,GAyPhD;IAzPY,wCAAc","sourcesContent":["import * as React from 'react';\r\n\r\nimport { BaseComponent, css, nullRender } from '../../Utilities';\r\nimport {\r\n  ICommandBar,\r\n  ICommandBarItemProps,\r\n  ICommandBarProps,\r\n  ICommandBarStyleProps,\r\n  ICommandBarStyles\r\n} from './CommandBar.types';\r\nimport { IOverflowSet, OverflowSet } from '../../OverflowSet';\r\nimport { IResizeGroup, ResizeGroup } from '../../ResizeGroup';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { classNamesFunction, createRef } from '../../Utilities';\r\nimport { CommandBarButton, IButtonProps } from '../../Button';\r\nimport { TooltipHost } from '../../Tooltip';\r\n\r\nconst getClassNames = classNamesFunction<ICommandBarStyleProps, ICommandBarStyles>();\r\n\r\nexport interface ICommandBarData {\r\n  /**\r\n   * Items being rendered in the primary region\r\n   */\r\n  primaryItems: ICommandBarItemProps[];\r\n  /**\r\n   * Items being rendered in the overflow\r\n   */\r\n  overflowItems: ICommandBarItemProps[];\r\n  /**\r\n   * Items being rendered on the far side\r\n   */\r\n  farItems: ICommandBarItemProps[] | undefined;\r\n  /**\r\n   * Length of original overflowItems to ensure that they are not moved into primary region on resize\r\n   */\r\n  minimumOverflowItems: number;\r\n  /**\r\n   * Unique string used to cache the width of the command bar\r\n   */\r\n  cacheKey: string;\r\n}\r\n\r\nexport class CommandBarBase extends BaseComponent<ICommandBarProps, {}> implements ICommandBar {\r\n  public static defaultProps: ICommandBarProps = {\r\n    items: [],\r\n    overflowItems: []\r\n  };\r\n\r\n  private _setSize: number;\r\n  private _overflowSet = createRef<IOverflowSet>();\r\n  private _resizeGroup = createRef<IResizeGroup>();\r\n  private _classNames: { [key in keyof ICommandBarStyles]: string };\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      className,\r\n      items,\r\n      overflowItems,\r\n      farItems,\r\n      styles,\r\n      theme,\r\n      onReduceData = this._onReduceData,\r\n      onGrowData = this._onGrowData\r\n    } = this.props;\r\n\r\n    const commandBarData: ICommandBarData = {\r\n      primaryItems: [...items],\r\n      overflowItems: [...overflowItems!],\r\n      minimumOverflowItems: [...overflowItems!].length, // for tracking\r\n      farItems,\r\n      cacheKey: ''\r\n    };\r\n\r\n    this._setAriaPosinset(commandBarData);\r\n    this._classNames = getClassNames(styles!, { theme: theme!, className });\r\n\r\n    return (\r\n      <ResizeGroup\r\n        componentRef={this._resizeGroup}\r\n        className={className}\r\n        data={commandBarData}\r\n        onReduceData={onReduceData}\r\n        onGrowData={onGrowData}\r\n        onRenderData={this._onRenderData}\r\n      />\r\n    );\r\n  }\r\n\r\n  public focus(): void {\r\n    const { current: overflowSet } = this._overflowSet;\r\n\r\n    overflowSet && overflowSet.focus();\r\n  }\r\n\r\n  public remeasure(): void {\r\n    this._resizeGroup.current && this._resizeGroup.current.remeasure();\r\n  }\r\n\r\n  private _setAriaPosinset(data: ICommandBarData): ICommandBarData {\r\n    this._setSize = data.primaryItems.length + (data.overflowItems.length > 0 ? 1 : 0);\r\n\r\n    data.primaryItems = data.primaryItems.map((item, i, array) => {\r\n      item['aria-posinset'] = i + 1;\r\n      item['aria-setsize'] = this._setSize;\r\n      return item;\r\n    });\r\n\r\n    if (data.farItems) {\r\n      data.farItems = data.farItems.map((item, i, array) => {\r\n        item['aria-posinset'] = i + 1;\r\n        item['aria-setsize'] = array.length;\r\n        return item;\r\n      });\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  private _onRenderData = (data: ICommandBarData): JSX.Element => {\r\n    return (\r\n      <FocusZone\r\n        className={css(this._classNames.root)}\r\n        direction={FocusZoneDirection.horizontal}\r\n        role={'menubar'}\r\n        aria-label={this.props.ariaLabel}\r\n      >\r\n        {/*Primary Items*/}\r\n        <OverflowSet\r\n          componentRef={this._resolveRef('_overflowSet')}\r\n          className={css(this._classNames.primarySet)}\r\n          doNotContainWithinFocusZone={true}\r\n          role={'presentation'}\r\n          items={data.primaryItems}\r\n          overflowItems={data.overflowItems.length ? data.overflowItems : undefined}\r\n          onRenderItem={this._onRenderItem}\r\n          onRenderOverflowButton={this._onRenderOverflowButton}\r\n        />\r\n\r\n        {/*Secondary Items*/}\r\n        {data.farItems && (\r\n          <OverflowSet\r\n            className={css(this._classNames.secondarySet)}\r\n            doNotContainWithinFocusZone={true}\r\n            role={'presentation'}\r\n            items={data.farItems}\r\n            onRenderItem={this._onRenderItem}\r\n            onRenderOverflowButton={nullRender}\r\n          />\r\n        )}\r\n      </FocusZone>\r\n    );\r\n  };\r\n\r\n  private _onRenderItem = (item: ICommandBarItemProps): JSX.Element | React.ReactNode => {\r\n    const { buttonAs: CommandButtonType = CommandBarButton } = this.props;\r\n\r\n    const itemText = item.text || item.name;\r\n\r\n    if (item.onRender) {\r\n      // These are the top level items, there is no relevant menu dismissing function to\r\n      // provide for the IContextualMenuItem onRender function. Pass in a no op function instead.\r\n      return item.onRender(item, () => undefined);\r\n    }\r\n    const commandButtonProps: ICommandBarItemProps = {\r\n      allowDisabledFocus: true,\r\n      ...item,\r\n      styles: { root: { height: '100%' }, ...item.buttonStyles },\r\n      className: css('ms-CommandBarItem-link', item.className),\r\n      text: !item.iconOnly ? itemText : undefined,\r\n      menuProps: item.subMenuProps,\r\n      onClick: this._onButtonClick(item)\r\n    };\r\n\r\n    if (item.iconOnly && itemText !== undefined) {\r\n      return (\r\n        <TooltipHost content={itemText} {...item.tooltipHostProps}>\r\n          <CommandButtonType {...commandButtonProps as IButtonProps} />\r\n        </TooltipHost>\r\n      );\r\n    }\r\n\r\n    return <CommandButtonType {...commandButtonProps as IButtonProps} />;\r\n  };\r\n\r\n  private _onButtonClick(item: ICommandBarItemProps): (ev: React.MouseEvent<HTMLButtonElement>) => void {\r\n    return ev => {\r\n      // inactive is deprecated. remove check in 7.0\r\n      if (item.inactive) {\r\n        return;\r\n      }\r\n      if (item.onClick) {\r\n        item.onClick(ev, item);\r\n      }\r\n    };\r\n  }\r\n\r\n  private _onRenderOverflowButton = (overflowItems: ICommandBarItemProps[]): JSX.Element => {\r\n    const {\r\n      overflowButtonAs: OverflowButtonType = CommandBarButton,\r\n      overflowButtonProps = {} // assure that props is not empty\r\n    } = this.props;\r\n\r\n    const combinedOverflowItems: ICommandBarItemProps[] = [\r\n      ...(overflowButtonProps.menuProps ? overflowButtonProps.menuProps.items : []),\r\n      ...overflowItems\r\n    ];\r\n\r\n    const overflowProps: IButtonProps = {\r\n      ...overflowButtonProps,\r\n      styles: { menuIcon: { fontSize: '17px' }, ...overflowButtonProps.styles },\r\n      className: css('ms-CommandBar-overflowButton', overflowButtonProps.className),\r\n      menuProps: { ...overflowButtonProps.menuProps, items: combinedOverflowItems },\r\n      menuIconProps: { iconName: 'More', ...overflowButtonProps.menuIconProps }\r\n    };\r\n\r\n    return (\r\n      <OverflowButtonType\r\n        aria-posinset={this._setSize}\r\n        aria-setsize={this._setSize}\r\n        {...overflowProps as IButtonProps}\r\n      />\r\n    );\r\n  };\r\n\r\n  private _computeCacheKey(data: ICommandBarData): string {\r\n    const { primaryItems, farItems = [], overflowItems } = data;\r\n    const returnKey = (acc: string, current: ICommandBarItemProps): string => {\r\n      const { cacheKey = current.key } = current;\r\n      return acc + cacheKey;\r\n    };\r\n\r\n    const primaryKey = primaryItems.reduce(returnKey, '');\r\n    const farKey = farItems.reduce(returnKey, '');\r\n    const overflowKey = !!overflowItems.length ? 'overflow' : '';\r\n\r\n    return [primaryKey, farKey, overflowKey].join(' ');\r\n  }\r\n\r\n  private _onReduceData = (data: ICommandBarData): ICommandBarData | undefined => {\r\n    const { shiftOnReduce, onDataReduced } = this.props;\r\n    let { primaryItems, overflowItems, cacheKey } = data;\r\n\r\n    // Use first item if shiftOnReduce, otherwise use last item\r\n    const movedItem = primaryItems[shiftOnReduce ? 0 : primaryItems.length - 1];\r\n\r\n    if (movedItem !== undefined) {\r\n      movedItem.renderedInOverflow = true;\r\n\r\n      overflowItems = [movedItem, ...overflowItems];\r\n      primaryItems = shiftOnReduce ? primaryItems.slice(1) : primaryItems.slice(0, -1);\r\n\r\n      const newData = this._setAriaPosinset({ ...data, primaryItems, overflowItems });\r\n\r\n      cacheKey = this._computeCacheKey(newData);\r\n\r\n      if (onDataReduced) {\r\n        onDataReduced(movedItem);\r\n      }\r\n\r\n      return { ...newData, cacheKey };\r\n    }\r\n\r\n    return undefined;\r\n  };\r\n\r\n  private _onGrowData = (data: ICommandBarData): ICommandBarData | undefined => {\r\n    const { shiftOnReduce, onDataGrown } = this.props;\r\n    const { minimumOverflowItems } = data;\r\n    let { primaryItems, overflowItems, cacheKey } = data;\r\n    const movedItem = overflowItems[0];\r\n\r\n    // Make sure that moved item exists and is not one of the original overflow items\r\n    if (movedItem !== undefined && overflowItems.length > minimumOverflowItems) {\r\n      movedItem.renderedInOverflow = false;\r\n\r\n      overflowItems = overflowItems.slice(1);\r\n      // if shiftOnReduce, movedItem goes first, otherwise, last.\r\n      primaryItems = shiftOnReduce ? [movedItem, ...primaryItems] : [...primaryItems, movedItem];\r\n\r\n      const newData = this._setAriaPosinset({ ...data, primaryItems, overflowItems });\r\n      cacheKey = this._computeCacheKey(newData);\r\n\r\n      if (onDataGrown) {\r\n        onDataGrown(movedItem);\r\n      }\r\n\r\n      return { ...newData, cacheKey };\r\n    }\r\n\r\n    return undefined;\r\n  };\r\n}\r\n"]}