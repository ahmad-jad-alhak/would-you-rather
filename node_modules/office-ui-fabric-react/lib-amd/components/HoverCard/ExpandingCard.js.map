{"version":3,"file":"ExpandingCard.js","sourceRoot":"../src/","sources":["components/HoverCard/ExpandingCard.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, getNativeProps, divProperties, customizable, KeyCodes, createRef } from '../../Utilities';\r\nimport { IExpandingCardProps, IExpandingCardStyles, ExpandingCardMode } from './ExpandingCard.types';\r\nimport { Callout, ICallout } from '../../Callout';\r\nimport { DirectionalHint } from '../../common/DirectionalHint';\r\nimport { mergeStyles } from '../../Styling';\r\nimport { FocusTrapZone } from '../../FocusTrapZone';\r\nimport { getStyles } from './ExpandingCard.styles';\r\n\r\nexport interface IExpandingCardState {\r\n  firstFrameRendered: boolean;\r\n  needsScroll: boolean;\r\n}\r\n\r\n@customizable('ExpandingCard', ['theme', 'styles'], true)\r\nexport class ExpandingCard extends BaseComponent<IExpandingCardProps, IExpandingCardState> {\r\n  public static defaultProps = {\r\n    compactCardHeight: 156,\r\n    expandedCardHeight: 384,\r\n    directionalHint: DirectionalHint.bottomLeftEdge,\r\n    directionalHintFixed: true,\r\n    gapSpace: 0\r\n  };\r\n\r\n  private _styles: IExpandingCardStyles;\r\n  // tslint:disable-next-line:no-unused-variable\r\n  private _callout = createRef<ICallout>();\r\n  private _expandedElem = createRef<HTMLDivElement>();\r\n\r\n  constructor(props: IExpandingCardProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstFrameRendered: false,\r\n      needsScroll: false\r\n    };\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this._checkNeedsScroll();\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    this._async.dispose();\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      targetElement,\r\n      theme,\r\n      styles: customStyles,\r\n      compactCardHeight,\r\n      directionalHintFixed,\r\n      firstFocus,\r\n      expandedCardHeight\r\n    } = this.props;\r\n    this._styles = getStyles(theme!, customStyles);\r\n\r\n    const content = (\r\n      <div onMouseEnter={this.props.onEnter} onMouseLeave={this.props.onLeave} onKeyDown={this._onKeyDown}>\r\n        {this._onRenderCompactCard()}\r\n        {this._onRenderExpandedCard()}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Callout\r\n        {...getNativeProps(this.props, divProperties)}\r\n        componentRef={this._callout}\r\n        className={mergeStyles(this._styles.root)}\r\n        target={targetElement}\r\n        isBeakVisible={false}\r\n        directionalHint={this.props.directionalHint}\r\n        directionalHintFixed={directionalHintFixed}\r\n        finalHeight={compactCardHeight! + expandedCardHeight!}\r\n        minPagePadding={24}\r\n        onDismiss={this.props.onLeave}\r\n        gapSpace={this.props.gapSpace}\r\n      >\r\n        {this.props.trapFocus ? (\r\n          <FocusTrapZone\r\n            forceFocusInsideTrap={false}\r\n            isClickableOutsideFocusTrap={true}\r\n            disableFirstFocus={!firstFocus}\r\n          >\r\n            {content}\r\n          </FocusTrapZone>\r\n        ) : (\r\n          content\r\n        )}\r\n      </Callout>\r\n    );\r\n  }\r\n\r\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\r\n    if (ev.which === KeyCodes.escape) {\r\n      this.props.onLeave && this.props.onLeave(ev);\r\n    }\r\n  };\r\n\r\n  private _onRenderCompactCard = (): JSX.Element => {\r\n    return (\r\n      <div className={mergeStyles(this._styles.compactCard, { height: this.props.compactCardHeight + 'px' }) as string}>\r\n        {this.props.onRenderCompactCard!(this.props.renderData)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  private _onRenderExpandedCard = (): JSX.Element => {\r\n    // firstFrameRendered helps in initially setting height of expanded card to 1px, even if\r\n    // mode prop is set to ExpandingCardMode.expanded on first render. This is to make sure transition animation takes place.\r\n    !this.state.firstFrameRendered &&\r\n      this._async.requestAnimationFrame(() => {\r\n        this.setState({\r\n          firstFrameRendered: true\r\n        });\r\n      });\r\n\r\n    return (\r\n      <div\r\n        className={mergeStyles(\r\n          this._styles.expandedCard,\r\n          this.props.mode === ExpandingCardMode.expanded &&\r\n            this.state.firstFrameRendered && { height: this.props.expandedCardHeight + 'px' }\r\n        )}\r\n        ref={this._expandedElem}\r\n      >\r\n        <div className={mergeStyles(this.state.needsScroll && this._styles.expandedCardScroll)}>\r\n          {this.props.onRenderExpandedCard && this.props.onRenderExpandedCard(this.props.renderData)}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  private _checkNeedsScroll = (): void => {\r\n    if (this._expandedElem.current) {\r\n      this._async.requestAnimationFrame(() => {\r\n        if (this._expandedElem.current && this._expandedElem.current.scrollHeight >= this.props.expandedCardHeight!) {\r\n          this.setState({\r\n            needsScroll: true\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n}\r\n"]}