{"version":3,"file":"DocumentCardPreview.js","sourceRoot":"../src/","sources":["components/DocumentCard/DocumentCardPreview.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { IDocumentCardPreviewProps, IDocumentCardPreviewImage } from './DocumentCard.types';\r\nimport { Image } from '../../Image';\r\nimport { Icon } from '../../Icon';\r\nimport { BaseComponent, css } from '../../Utilities';\r\nimport * as stylesImport from './DocumentCard.scss';\r\nconst styles: any = stylesImport;\r\n\r\nconst LIST_ITEM_COUNT = 3;\r\n\r\nexport class DocumentCardPreview extends BaseComponent<IDocumentCardPreviewProps, any> {\r\n  public render(): JSX.Element {\r\n    const { previewImages } = this.props;\r\n    let style, preview;\r\n    let isFileList = false;\r\n\r\n    if (previewImages.length > 1) {\r\n      // Render a list of files\r\n      preview = this._renderPreviewList(previewImages);\r\n      isFileList = true;\r\n    } else if (previewImages.length === 1) {\r\n      // Render a single preview\r\n      preview = this._renderPreviewImage(previewImages[0]);\r\n\r\n      // Override the border color if an accent color was provided\r\n      if (previewImages[0].accentColor) {\r\n        style = {\r\n          borderBottomColor: previewImages[0].accentColor\r\n        };\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={css(\r\n          'ms-DocumentCardPreview',\r\n          styles.preview,\r\n          isFileList && 'is-fileList ' + styles.previewIsFileList\r\n        )}\r\n        style={style}\r\n      >\r\n        {preview}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _renderPreviewImage(\r\n    previewImage: IDocumentCardPreviewImage\r\n  ): React.ReactElement<React.HTMLAttributes<HTMLDivElement>> {\r\n    const { width, height, imageFit, previewIconProps, previewIconContainerClass } = previewImage;\r\n    const iconContainerClass = previewIconContainerClass\r\n      ? previewIconContainerClass\r\n      : 'ms-DocumentCardPreview-iconContainer';\r\n\r\n    if (previewIconProps) {\r\n      return (\r\n        <div className={css(iconContainerClass, styles.previewIconContainer)} style={{ width: width, height: height }}>\r\n          <Icon {...previewIconProps} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const image = (\r\n      <Image\r\n        width={width}\r\n        height={height}\r\n        imageFit={imageFit}\r\n        src={previewImage.previewImageSrc}\r\n        role=\"presentation\"\r\n        alt=\"\"\r\n      />\r\n    );\r\n\r\n    let icon;\r\n    if (previewImage.iconSrc) {\r\n      icon = (\r\n        <Image\r\n          className={css('ms-DocumentCardPreview-icon', styles.icon)}\r\n          src={previewImage.iconSrc}\r\n          role=\"presentation\"\r\n          alt=\"\"\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {image}\r\n        {icon}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _renderPreviewList = (\r\n    previewImages: IDocumentCardPreviewImage[]\r\n  ): React.ReactElement<React.HTMLAttributes<HTMLDivElement>> => {\r\n    const { getOverflowDocumentCountText } = this.props;\r\n\r\n    // Determine how many documents we won't be showing\r\n    const overflowDocumentCount = previewImages.length - LIST_ITEM_COUNT;\r\n\r\n    // Determine the overflow text that will be rendered after the preview list.\r\n    const overflowText = overflowDocumentCount\r\n      ? getOverflowDocumentCountText\r\n        ? getOverflowDocumentCountText(overflowDocumentCount)\r\n        : '+' + overflowDocumentCount\r\n      : null;\r\n\r\n    // Create list items for the documents to be shown\r\n    const fileListItems = previewImages.slice(0, LIST_ITEM_COUNT).map((file, fileIndex) => (\r\n      <li key={fileIndex}>\r\n        <Image\r\n          className={css('ms-DocumentCardPreview-fileListIcon', styles.fileListIcon)}\r\n          src={file.iconSrc}\r\n          role=\"presentation\"\r\n          alt=\"\"\r\n          width=\"16px\"\r\n          height=\"16px\"\r\n        />\r\n        <a href={file.url}>{file.name}</a>\r\n      </li>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <ul className={css('ms-DocumentCardPreview-fileList', styles.fileList)}>{fileListItems}</ul>\r\n        {overflowText && (\r\n          <span className={css('ms-DocumentCardPreview-fileListMore', styles.fileListMore)}>{overflowText}</span>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n"]}