{"version":3,"file":"DatePicker.Required.Example.js","sourceRoot":"../src/","sources":["components/DatePicker/examples/DatePicker.Required.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,UAAU,EAAE,SAAS,EAAsB,MAAM,uCAAuC,CAAC;AAClG,OAAO,4BAA4B,CAAC;AAEpC,IAAM,gBAAgB,GAAuB;IAC3C,MAAM,EAAE;QACN,SAAS;QACT,UAAU;QACV,OAAO;QACP,OAAO;QACP,KAAK;QACL,MAAM;QACN,MAAM;QACN,QAAQ;QACR,WAAW;QACX,SAAS;QACT,UAAU;QACV,UAAU;KACX;IAED,WAAW,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IAEjG,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;IAEpF,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAE9C,SAAS,EAAE,aAAa;IACxB,kBAAkB,EAAE,sBAAsB;IAC1C,kBAAkB,EAAE,kBAAkB;IACtC,iBAAiB,EAAE,qBAAqB;IACxC,iBAAiB,EAAE,iBAAiB;IAEpC,sBAAsB,EAAE,oBAAoB;IAE5C,wBAAwB,EAAE,sBAAsB;CACjD,CAAC;AAMF;IAA+C,qDAAoD;IACjG,mCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAKb;QAHC,KAAI,CAAC,KAAK,GAAG;YACX,cAAc,EAAE,SAAS,CAAC,MAAM;SACjC,CAAC;;IACJ,CAAC;IAEM,0CAAM,GAAb;QACU,IAAA,0CAAc,CAAgB;QAEtC,OAAO,CACL,6BAAK,SAAS,EAAC,wBAAwB;YACrC,sFAA2D;YAC3D,oBAAC,UAAU,IACT,KAAK,EAAC,4BAA4B,EAClC,UAAU,EAAE,IAAI,EAChB,cAAc,EAAE,cAAc,EAC9B,OAAO,EAAE,gBAAgB,EACzB,WAAW,EAAC,kBAAkB,GAC9B;YACF,oBAAC,UAAU,IACT,UAAU,EAAE,IAAI,EAChB,cAAc,EAAE,cAAc,EAC9B,OAAO,EAAE,gBAAgB,EACzB,WAAW,EAAC,gCAAgC,GAC5C,CACE,CACP,CAAC;IACJ,CAAC;IACH,gCAAC;AAAD,CAAC,AA/BD,CAA+C,KAAK,CAAC,SAAS,GA+B7D","sourcesContent":["import * as React from 'react';\r\nimport { DatePicker, DayOfWeek, IDatePickerStrings } from 'office-ui-fabric-react/lib/DatePicker';\r\nimport './DatePicker.Examples.scss';\r\n\r\nconst DayPickerStrings: IDatePickerStrings = {\r\n  months: [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n  ],\r\n\r\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n\r\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n\r\n  shortDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\r\n\r\n  goToToday: 'Go to today',\r\n  prevMonthAriaLabel: 'Go to previous month',\r\n  nextMonthAriaLabel: 'Go to next month',\r\n  prevYearAriaLabel: 'Go to previous year',\r\n  nextYearAriaLabel: 'Go to next year',\r\n\r\n  isRequiredErrorMessage: 'Field is required.',\r\n\r\n  invalidInputErrorMessage: 'Invalid date format.'\r\n};\r\n\r\nexport interface IDatePickerRequiredExampleState {\r\n  firstDayOfWeek?: DayOfWeek;\r\n}\r\n\r\nexport class DatePickerRequiredExample extends React.Component<{}, IDatePickerRequiredExampleState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstDayOfWeek: DayOfWeek.Sunday\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { firstDayOfWeek } = this.state;\r\n\r\n    return (\r\n      <div className=\"docs-DatePickerExample\">\r\n        <p>Validation will happen when Date Picker loses focus.</p>\r\n        <DatePicker\r\n          label=\"Date required (with label)\"\r\n          isRequired={true}\r\n          firstDayOfWeek={firstDayOfWeek}\r\n          strings={DayPickerStrings}\r\n          placeholder=\"Select a date...\"\r\n        />\r\n        <DatePicker\r\n          isRequired={true}\r\n          firstDayOfWeek={firstDayOfWeek}\r\n          strings={DayPickerStrings}\r\n          placeholder=\"Date required with no label...\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}