{"version":3,"file":"Button.Swap.Example.js","sourceRoot":"../src/","sources":["components/Button/examples/Button.Swap.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,QAAQ,MAAM,WAAW,CAAC;AACtC,OAAO,EAAE,GAAG,EAAE,kBAAkB,EAAE,MAAM,sCAAsC,CAAC;AAC/E,OAAO,EAAE,SAAS,EAA4D,MAAM,+BAA+B,CAAC;AACpH,OAAO,EAAE,aAAa,EAAE,aAAa,EAAgB,MAAM,mCAAmC,CAAC;AAM/F;IAAuC,6CAAsD;IAI3F,2BAAmB,KAAmB;QAAtC,YACE,kBAAM,KAAK,CAAC,SAOb;QAqCO,mBAAa,GAAG,UAAC,GAAQ;YAC/B,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAgB,CAAC;QAC5D,CAAC,CAAC;QAEM,cAAQ,GAAG;YACjB,kCAAkC;YAClC,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,CAAC,KAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;QACtD,CAAC,CAAC;QAjDA,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,KAAI,CAAC,KAAK,GAAG;YACX,SAAS,EAAE,IAAI;SAChB,CAAC;;IACJ,CAAC;IAEM,+CAAmB,GAA1B,UAA2B,SAAuB,EAAE,SAAkC;QACpF,+CAA+C;QAC/C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,KAAK,IAAI,CAAC,SAAS,CAAC;IAC5D,CAAC;IAEM,8CAAkB,GAAzB,UAA0B,SAAuB,EAAE,SAAkC;QACnF,oDAAoD;QACpD,mEAAmE;QACnE,IAAI,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,aAAa,KAAK,IAAI,CAAC,SAAS,EAAE;YAC9D,IAAI,CAAC,SAAU,CAAC,KAAK,EAAE,CAAC;SACzB;IACH,CAAC;IAEM,kCAAM,GAAb;QACU,IAAA,gCAAS,CAAgB;QAC3B,IAAA,eAAkC,EAAhC,sBAAQ,EAAE,oBAAO,CAAgB;QACzC,IAAM,IAAI,GAAG,MAAM,CAAC;QAEpB,mCAAmC;QACnC,IAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CACzB,oBAAC,aAAa,IAAC,GAAG,EAAE,IAAI,CAAC,aAAa,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,IACjG,IAAI,CACS,CACjB,CAAC,CAAC,CAAC,CACF,oBAAC,aAAa,IAAC,GAAG,EAAE,IAAI,CAAC,aAAa,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,IACjG,IAAI,CACS,CACjB,CAAC;QAEF,IAAM,aAAa,GAAG,kBAAkB,EAA4D,CAAC;QACrG,IAAM,UAAU,GAAG,aAAa,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAEhD,OAAO,6BAAK,SAAS,EAAE,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,IAAG,MAAM,CAAO,CAAC;IACjE,CAAC;IAUH,wBAAC;AAAD,CAAC,AAzDD,CAAuC,KAAK,CAAC,SAAS,GAyDrD","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { css, classNamesFunction } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { getStyles, IButtonBasicExampleStyleProps, IButtonBasicExampleStyles } from './Button.Basic.Example.styles';\r\nimport { DefaultButton, PrimaryButton, IButtonProps } from 'office-ui-fabric-react/lib/Button';\r\n\r\nexport interface IButtonSwapExampleState {\r\n  isPrimary: boolean;\r\n}\r\n\r\nexport class ButtonSwapExample extends React.Component<IButtonProps, IButtonSwapExampleState> {\r\n  private buttonRef: HTMLElement | null;\r\n  private hasFocus: boolean;\r\n\r\n  public constructor(props: IButtonProps) {\r\n    super(props);\r\n\r\n    this.hasFocus = false;\r\n    this.buttonRef = null;\r\n    this.state = {\r\n      isPrimary: true\r\n    };\r\n  }\r\n\r\n  public componentWillUpdate(nextProps: IButtonProps, nextState: IButtonSwapExampleState): void {\r\n    // check to see if our button element has focus\r\n    this.hasFocus = document.activeElement === this.buttonRef;\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IButtonProps, prevState: IButtonSwapExampleState): void {\r\n    // if our button previously had focus but we lost it\r\n    // because we switched the control type, we need to set focus again\r\n    if (this.hasFocus && document.activeElement !== this.buttonRef) {\r\n      this.buttonRef!.focus();\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { isPrimary } = this.state;\r\n    const { disabled, checked } = this.props;\r\n    const text = 'Swap';\r\n\r\n    // determine which button to render\r\n    const button = isPrimary ? (\r\n      <PrimaryButton ref={this._setButtonRef} disabled={disabled} checked={checked} onClick={this._onClick}>\r\n        {text}\r\n      </PrimaryButton>\r\n    ) : (\r\n      <DefaultButton ref={this._setButtonRef} disabled={disabled} checked={checked} onClick={this._onClick}>\r\n        {text}\r\n      </DefaultButton>\r\n    );\r\n\r\n    const getClassNames = classNamesFunction<IButtonBasicExampleStyleProps, IButtonBasicExampleStyles>();\r\n    const classNames = getClassNames(getStyles, {});\r\n\r\n    return <div className={css(classNames.example)}>{button}</div>;\r\n  }\r\n\r\n  private _setButtonRef = (ref: any): void => {\r\n    this.buttonRef = ReactDOM.findDOMNode(ref) as HTMLElement;\r\n  };\r\n\r\n  private _onClick = (): void => {\r\n    // change the button type on click\r\n    this.setState({ isPrimary: !this.state.isPrimary });\r\n  };\r\n}\r\n"]}