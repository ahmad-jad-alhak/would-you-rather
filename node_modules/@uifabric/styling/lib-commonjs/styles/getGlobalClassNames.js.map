{"version":3,"file":"getGlobalClassNames.js","sourceRoot":"../src/","sources":["styles/getGlobalClassNames.ts"],"names":[],"mappings":";;AAEA,uDAAoD;AACpD,iDAAsD;AAItD;;;;;;;;GAQG;AACU,QAAA,mBAAmB,GAII,2BAAe,CACjD,UACE,UAA+B,EAC/B,KAAa,EACb,uBAAiC;IAEjC,IAAM,UAAU,GAAG,yBAAU,CAAC,WAAW,EAAE,CAAC;IAE5C,IAAI,uBAAuB,IAAI,CAAC,uBAAuB,KAAK,SAAS,IAAI,KAAK,CAAC,uBAAuB,CAAC,EAAE;QACvG,4BAA4B;QAC5B,OAAO,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,UAAC,GAAO,EAAE,SAAiB;YAC/D,GAAG,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YAChE,OAAO,GAAG,CAAC;QACb,CAAC,EAAE,EAAE,CAAC,CAAC;KACR;IAED,wBAAwB;IACxB,OAAO,UAAU,CAAC;AACpB,CAAC,CACF,CAAC","sourcesContent":["import { ITheme } from '../interfaces/index';\r\n\r\nimport { Stylesheet } from '@uifabric/merge-styles';\r\nimport { memoizeFunction } from '@uifabric/utilities';\r\n\r\nexport type GlobalClassNames<IStyles> = Record<keyof IStyles, string>;\r\n\r\n/**\r\n * Checks for the `disableGlobalClassNames` property on the `theme` to determine if it should return `classNames`\r\n * Note that calls to this function are memoized.\r\n *\r\n * @param classNames The collection of global class names that apply when the flag is false. Make sure to pass in\r\n * the same instance on each call to benefit from memoization.\r\n * @param theme The theme to check the flag on\r\n * @param disableGlobalClassNames Optional. Explicitly opt in/out of disabling global classnames. Defaults to false.\r\n */\r\nexport const getGlobalClassNames: <T>(\r\n  classNames: GlobalClassNames<T>,\r\n  theme: ITheme,\r\n  disableGlobalClassNames?: boolean\r\n) => Partial<GlobalClassNames<T>> = memoizeFunction(\r\n  <T>(\r\n    classNames: GlobalClassNames<T>,\r\n    theme: ITheme,\r\n    disableGlobalClassNames?: boolean\r\n  ): Partial<GlobalClassNames<T>> => {\r\n    const styleSheet = Stylesheet.getInstance();\r\n\r\n    if (disableGlobalClassNames || (disableGlobalClassNames === undefined && theme.disableGlobalClassNames)) {\r\n      // disable global classnames\r\n      return Object.keys(classNames).reduce((acc: {}, className: string) => {\r\n        acc[className] = styleSheet.getClassName(classNames[className]);\r\n        return acc;\r\n      }, {});\r\n    }\r\n\r\n    // use global classnames\r\n    return classNames;\r\n  }\r\n);\r\n"]}